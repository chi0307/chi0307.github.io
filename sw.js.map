{"version":3,"sources":["../src/sw.ts"],"names":["event","requestUrl","item","url"],"mappings":"AAGA,KAAK,iBAAiB,WAAa,GAAU,CAC3C,EAAM,UAAU,KAAK,QAAQ,MAAA,CAAO,CACtC,CAAC,EACD,KAAK,iBAAiB,UAAW,IAAY,CACtC,KAAK,YAAY,CACxB,CAAC,EAGD,KAAK,iBAAiB,QAAU,GAAU,CACxC,MAAM,EAAa,IAAI,IAAI,EAAM,QAAQ,GAAG,EAGxC,EAAW,SAAW,KAAK,SAAS,QAInB,k/DAAK,cAAc,IAAK,GAAS,CACpD,MAAM,EAAM,OAAO,GAAS,SAAW,EAAO,EAAK,IACnD,OAAO,IAAI,IAAI,EAAK,KAAK,SAAS,MAAM,EAAE,QAAA,CAC3C,EACiB,SAAS,EAAW,QAAQ,CAGhD,CAAC","file":"sw.js","sourcesContent":["declare let self: ServiceWorkerGlobalScope & { __WB_MANIFEST: (string | { url: string })[] }\n\n// 確保新的 Service Worker 立即接管\nself.addEventListener('activate', (event) => {\n  event.waitUntil(self.clients.claim())\n})\nself.addEventListener('install', (): void => {\n  void self.skipWaiting()\n})\n\n// 放行所有非指定資源的請求\nself.addEventListener('fetch', (event) => {\n  const requestUrl = new URL(event.request.url)\n\n  // 僅處理本站的資源（避免攔截外部資源）\n  if (requestUrl.origin !== self.location.origin) {\n    return\n  }\n\n  const cacheUrlList = self.__WB_MANIFEST.map((item) => {\n    const url = typeof item === 'string' ? item : item.url\n    return new URL(url, self.location.origin).pathname\n  })\n  if (!cacheUrlList.includes(requestUrl.pathname)) {\n    return // 放行非指定資源\n  }\n})\n"]}
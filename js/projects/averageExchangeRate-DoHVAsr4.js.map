{"version":3,"file":"averageExchangeRate-DoHVAsr4.js","sources":["../../../src/utils/converts.ts","../../../src/views/projects/AverageExchangeRate/App.vue","../../../src/views/projects/AverageExchangeRate/main.ts"],"sourcesContent":["export type ConvertData<T, I, O> = T extends I\n  ? O\n  : T extends I | null\n    ? O | null\n    : T extends I | undefined\n      ? O | undefined\n      : T extends I | null | undefined\n        ? O | null | undefined\n        : T\n\nexport function convertToDate<T extends string | null | undefined>(\n  data: T,\n): ConvertData<T, string, Date> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-explicit-any\n  return (typeof data === 'string' ? new Date(data) : data) as any\n}\n\nexport function convertField<T extends object, K extends keyof T, V>(\n  list: T[],\n  field: K,\n  convertToAny: (value: T[K]) => V,\n): (Omit<T, K> & Record<K, V>)[] {\n  return list.map((item) => {\n    const newItem = { ...item, [field]: convertToAny(item[field]) } as Omit<T, K> & Record<K, V>\n    return newItem\n  })\n}\n","<template>\n  <main class=\"flex-col gap-8px m-24px mb-64px\">\n    <v-tabs v-model=\"selectedTab\" align-tabs=\"center\" color=\"deep-purple-accent-4\">\n      <v-tab v-for=\"({ id, title }, index) of tabs\" :key=\"index\" :value=\"id\">\n        {{ title }}\n        <p\n          v-if=\"id === selectedTab\"\n          class=\"flex-center w-24px h-24px\"\n          @click=\"showEditTabDialog = true\"\n        >\n          <i class=\"fa-solid fa-pen ml-4px\" />\n        </p>\n      </v-tab>\n      <v-tab @click=\"addTab\">\n        <i class=\"fas text-16px fa-plus\" />\n      </v-tab>\n    </v-tabs>\n    <div class=\"flex-center w-full gap-4px\">\n      <div class=\"flex-1\">\n        <v-text-field\n          :model-value=\"currentAmount\"\n          :label=\"`剩餘${foreignCurrencyString}`\"\n          hide-details=\"auto\"\n          inputmode=\"decimal\"\n          @update:model-value=\"\n            (newValue: string) => update('amount', checkNumberAndReturn(newValue))\n          \"\n        />\n      </div>\n      <div class=\"flex-1\">\n        <v-text-field :model-value=\"averageRate\" hide-details=\"auto\" label=\"平均匯率\" disabled />\n      </div>\n    </div>\n    <v-data-table :headers=\"headers\" :items=\"rows\">\n      <!-- eslint-disable-next-line vue/valid-v-slot -->\n      <template #item.actions=\"{ item }\">\n        <i class=\"fa-solid fa-trash\" @click=\"deleteItemEvent(item)\" />\n      </template>\n    </v-data-table>\n    <div class=\"fixed bottom-24px right-24px\" @click=\"showAddItemDialog = true\">\n      <v-btn icon=\"mdi-plus\" />\n    </div>\n  </main>\n  <v-dialog v-model=\"showAddItemDialog\">\n    <v-card title=\"Add Item\">\n      <template #text>\n        <v-text-field\n          v-model=\"addItem.date\"\n          type=\"datetime-local\"\n          hide-details=\"auto\"\n          label=\"交易日期\"\n        />\n        <v-text-field\n          :model-value=\"addItem.sell\"\n          hide-details=\"auto\"\n          inputmode=\"decimal\"\n          :label=\"`賣出${localCurrencyString}`\"\n          @update:model-value=\"\n            (newValue: string) => (addItem.sell = checkNumberAndReturn(newValue))\n          \"\n        />\n        <v-text-field\n          :model-value=\"addItem.buy\"\n          hide-details=\"auto\"\n          inputmode=\"decimal\"\n          :label=\"`買入${foreignCurrencyString}`\"\n          @update:model-value=\"(newValue: string) => (addItem.buy = checkNumberAndReturn(newValue))\"\n        />\n        <v-text-field\n          hide-details=\"auto\"\n          label=\"平均匯率\"\n          :model-value=\"addItem.buy === 0 ? 0 : round(addItem.sell / addItem.buy)\"\n          disabled\n        />\n      </template>\n      <template #actions>\n        <v-btn class=\"ms-auto\" text=\"Submit\" @click=\"addItemEvent\" />\n      </template>\n    </v-card>\n  </v-dialog>\n  <v-dialog v-model=\"showEditTabDialog\">\n    <v-card v-if=\"editTab !== null\" title=\"Setting\">\n      <template #text>\n        <div class=\"flex-col gap-8px\">\n          <v-text-field v-model=\"editTab.title\" hide-details=\"auto\" label=\"標籤名稱\" />\n          <v-text-field\n            v-model=\"editTab.locale\"\n            hide-details=\"auto\"\n            label=\"語系代碼\"\n            placeholder=\"zh-TW\"\n          />\n          <v-text-field\n            v-model=\"editTab.localCurrencyCode\"\n            hide-details=\"auto\"\n            label=\"本幣代碼\"\n            placeholder=\"TWD\"\n          />\n          <v-text-field\n            v-model=\"editTab.foreignCurrencyCode\"\n            hide-details=\"auto\"\n            label=\"外幣代碼\"\n            placeholder=\"JPY\"\n          />\n          <v-textarea\n            v-model=\"editTab.config\"\n            :error-messages=\"configIsValid ? '' : 'json 無效'\"\n            label=\"設定檔\"\n            messages=\"若有修改到設定檔上方其他設定就會忽略\"\n          />\n        </div>\n      </template>\n      <template #actions>\n        <div class=\"flex items-center justify-between w-full\">\n          <v-btn text=\"Delete\" color=\"red\" @click=\"deleteTabEvent(selectedTab)\" />\n          <div>\n            <v-btn text=\"Cancel\" @click=\"showEditTabDialog = false\" />\n            <v-btn text=\"Save\" color=\"blue\" @click=\"saveTabEvent\" />\n          </div>\n        </div>\n      </template>\n    </v-card>\n  </v-dialog>\n  <v-dialog :model-value=\"Boolean(deleteData)\" @update:model-value=\"deleteData = null\">\n    <v-card class=\"mx-auto\" max-width=\"320\" title=\"Update Field\">\n      <template #text> {{ deleteData?.message ?? '' }} </template>\n      <template #actions>\n        <v-btn class=\"ms-auto\" text=\"Cancel\" @click=\"deleteData = null\" />\n        <v-btn class=\"ms-auto\" color=\"red\" text=\"Delete\" @click=\"deleteData?.event\" />\n      </template>\n    </v-card>\n  </v-dialog>\n</template>\n<script lang=\"ts\" setup>\nimport { format } from 'date-fns'\nimport { computed, onMounted, ref, watch } from 'vue'\n\nimport type { UUID } from '@/types'\nimport { generateUuid, isTruthyString, roundByDigits } from '@/utils'\nimport { isUuid } from '@/utils/checkTyping'\nimport { convertField, convertToDate } from '@/utils/converts'\nimport { sortListByDate } from '@/utils/sorts'\nimport { localStorageManager } from '@/utils/StorageManager'\n\nimport {\n  type AverageExchangeRateItem,\n  type AverageExchangeRateData,\n  type AverageExchangeRateGroup,\n  initAverageExchangeRateData,\n  formatCurrency,\n  checkFormatCurrency,\n  isAverageExchangeRateData,\n} from '.'\n\ninterface DataRow {\n  id: UUID\n  date: string\n  sell: number\n  buy: number\n  exchangeRate: number\n  balance: number\n}\ninterface TableRow {\n  id: UUID\n  date: string\n  sell: string\n  buy: string\n  exchangeRate: number\n  balance: string\n}\n\nconst round = roundByDigits(4)\n\nconst headers = computed(\n  () =>\n    [\n      { title: '日期', key: 'date', nowrap: true, sortable: false },\n      {\n        title: `賣出${localCurrencyString.value}`,\n        key: 'sell',\n        nowrap: true,\n        sortable: false,\n        align: 'end',\n      },\n      {\n        title: `買入${foreignCurrencyString.value}`,\n        key: 'buy',\n        nowrap: true,\n        sortable: false,\n        align: 'end',\n      },\n      { title: '匯率', key: 'exchangeRate', nowrap: true, sortable: false },\n      {\n        title: `剩餘${foreignCurrencyString.value}`,\n        key: 'balance',\n        nowrap: true,\n        sortable: false,\n        align: 'end',\n      },\n      {\n        key: 'actions',\n        sortable: false,\n      },\n    ] as const,\n)\n\nconst rows = computed((): TableRow[] => {\n  return dataRows.value.map((item) => ({\n    ...item,\n    sell: formatCurrency(\n      item.sell,\n      currentData.value?.locale,\n      currentData.value?.localCurrencyCode,\n    ),\n    buy: formatCurrency(\n      item.buy,\n      currentData.value?.locale,\n      currentData.value?.foreignCurrencyCode,\n    ),\n    balance: formatCurrency(\n      item.balance,\n      currentData.value?.locale,\n      currentData.value?.foreignCurrencyCode,\n    ),\n  }))\n})\nconst dataRows = computed((): DataRow[] => {\n  let totalAmount = currentAmount.value\n  return sortListByDate(convertField(currentList.value, 'date', convertToDate), 'date', 'desc').map(\n    (item) => {\n      const balance = totalAmount > item.buy ? item.buy : totalAmount\n      totalAmount -= balance\n      return {\n        id: item.id,\n        date: format(item.date, 'yyyy/MM/dd'),\n        sell: item.sell,\n        buy: item.buy,\n        exchangeRate: round(item.sell / item.buy),\n        balance,\n      }\n    },\n  )\n})\nconst averageRate = computed((): number => {\n  let sellTotal = 0\n  let buyTotal = 0\n  for (const item of dataRows.value) {\n    if (item.balance > 0) {\n      buyTotal += item.balance\n      sellTotal += item.balance * item.exchangeRate\n    }\n  }\n  return buyTotal === 0 ? 0 : round(sellTotal / buyTotal)\n})\n\nconst showAddItemDialog = ref(false)\nconst showEditTabDialog = ref(false)\nconst selectedTab = ref<UUID | null>(null)\nconst restoreData = ref<AverageExchangeRateGroup>({})\nconst currentData = computed((): AverageExchangeRateData | null =>\n  selectedTab.value !== null ? (restoreData.value[selectedTab.value] ?? null) : null,\n)\nconst currentList = computed((): AverageExchangeRateItem[] => currentData.value?.list ?? [])\nconst currentAmount = computed((): number => currentData.value?.amount ?? 0)\nconst tabs = computed((): { id: string; title: string }[] => {\n  return Object.entries(restoreData.value).map(([id, { title }]) => ({ id, title }))\n})\nconst localCurrencyString = computed(() =>\n  isTruthyString(currentData.value?.localCurrencyCode)\n    ? ` ${currentData.value.localCurrencyCode}`\n    : '本幣',\n)\nconst foreignCurrencyString = computed(() =>\n  isTruthyString(currentData.value?.foreignCurrencyCode)\n    ? ` ${currentData.value.foreignCurrencyCode}`\n    : '外幣',\n)\n\nonMounted(() => {\n  restoreData.value = localStorageManager.get('averageExchangeRate') ?? {}\n  checkAndResetTab()\n})\nfunction checkAndResetTab(): void {\n  if (Object.keys(restoreData.value).length === 0) {\n    addTab()\n  }\n  const tabId = Object.keys(restoreData.value)[0]\n  if (isUuid(tabId)) {\n    selectedTab.value = tabId\n  }\n}\n\nwatch(showAddItemDialog, () => {\n  addItem.value = resetItem()\n})\nfunction resetItem(): Omit<AverageExchangeRateItem, 'id'> {\n  return {\n    sell: 0,\n    buy: 0,\n    date: format(new Date(), \"yyyy-MM-dd'T'HH:mm\"),\n  }\n}\n\nconst addItem = ref<Omit<AverageExchangeRateItem, 'id'>>(resetItem())\ninterface EditTab {\n  title: string\n  localCurrencyCode: string\n  foreignCurrencyCode: string\n  locale: string\n  config: string\n}\nconst editTab = ref<EditTab | null>(null)\n\nfunction addItemEvent(): void {\n  const { buy, sell } = addItem.value\n  const date = new Date(addItem.value.date).toISOString()\n  const id = generateUuid()\n  update('list', [{ buy, sell, date, id }, ...currentList.value])\n  showAddItemDialog.value = false\n}\n\nfunction addTab(): void {\n  const id = generateUuid()\n  restoreData.value[id] = initAverageExchangeRateData()\n  selectedTab.value = id\n}\n\nwatch(\n  restoreData,\n  () => {\n    localStorageManager.set('averageExchangeRate', restoreData.value)\n  },\n  { deep: true },\n)\n\nfunction update<Key extends keyof AverageExchangeRateData>(\n  key: Key,\n  value: AverageExchangeRateData[Key],\n): void {\n  if (selectedTab.value === null) {\n    return\n  }\n  const data: AverageExchangeRateData =\n    restoreData.value[selectedTab.value] ?? initAverageExchangeRateData()\n  data[key] = value\n}\n\nwatch(showEditTabDialog, (show) => {\n  if (!show) {\n    editTab.value = null\n    return\n  } else if (currentData.value !== null) {\n    editTab.value = {\n      title: currentData.value.title,\n      localCurrencyCode: currentData.value.localCurrencyCode ?? '',\n      foreignCurrencyCode: currentData.value.foreignCurrencyCode ?? '',\n      locale: currentData.value.locale ?? '',\n      config: JSON.stringify(currentData.value, null, 2),\n    }\n  }\n})\n\nfunction saveTabEvent(): void {\n  if (editTab.value === null) {\n    return\n  }\n  const { title, localCurrencyCode, foreignCurrencyCode, locale, config } = editTab.value\n  const configJson = checkAverageExchangeRateConfig(config)\n  if (\n    configJson !== null &&\n    selectedTab.value !== null &&\n    JSON.stringify(configJson) !== JSON.stringify(currentData.value)\n  ) {\n    restoreData.value[selectedTab.value] = configJson\n  } else {\n    checkFormatCurrency({ locale, localCurrencyCode, foreignCurrencyCode })\n    update('title', title)\n    update('localCurrencyCode', isTruthyString(localCurrencyCode) ? localCurrencyCode : null)\n    update('foreignCurrencyCode', isTruthyString(foreignCurrencyCode) ? foreignCurrencyCode : null)\n    update('locale', isTruthyString(locale) ? locale : null)\n  }\n  showEditTabDialog.value = false\n}\n\nconst deleteData = ref<{ message: string; event: () => void } | null>(null)\nfunction deleteItemEvent({ id }: TableRow): void {\n  deleteData.value = {\n    message: '確定要刪除這筆資料嗎？',\n    event: (): void => {\n      update(\n        'list',\n        [...currentList.value].filter((item) => item.id !== id),\n      )\n      deleteData.value = null\n    },\n  }\n}\nfunction deleteTabEvent(id: UUID | null): void {\n  if (id === null) {\n    return\n  }\n  deleteData.value = {\n    message: '確定要刪除這張表嗎？',\n    event: (): void => {\n      // eslint-disable-next-line security/detect-object-injection, @typescript-eslint/no-dynamic-delete\n      delete restoreData.value[id]\n      checkAndResetTab()\n      deleteData.value = null\n      showEditTabDialog.value = false\n    },\n  }\n}\n\nfunction checkNumberAndReturn(newValue: string): number {\n  const newNumber = parseFloat(newValue)\n  return isNaN(newNumber) ? 0 : newNumber\n}\n\nconst configIsValid = ref(true)\nwatch(\n  () => editTab.value?.config,\n  (data) => {\n    configIsValid.value = Boolean(checkAverageExchangeRateConfig(data))\n  },\n)\nfunction checkAverageExchangeRateConfig(data: string | undefined): AverageExchangeRateData | null {\n  if (data === undefined) {\n    return null\n  }\n  let jsonData: unknown\n  try {\n    jsonData = JSON.parse(data)\n  } catch {\n    return null\n  }\n  return isAverageExchangeRateData(jsonData) ? jsonData : null\n}\n</script>\n","import { createBaseApp } from '@/base/index'\nimport { vuetify } from '@/base/vuetify'\n\nimport App from './App.vue'\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\nconst app = createBaseApp(App)\n\napp.use(vuetify)\n\napp.mount('#app')\n"],"names":["convertToDate","data","convertField","list","field","convertToAny","item","round","roundByDigits","headers","computed","localCurrencyString","foreignCurrencyString","rows","dataRows","formatCurrency","_a","currentData","_b","_c","_d","_e","_f","totalAmount","currentAmount","sortListByDate","currentList","balance","format","averageRate","sellTotal","buyTotal","showAddItemDialog","ref","showEditTabDialog","selectedTab","restoreData","tabs","id","title","isTruthyString","onMounted","localStorageManager","checkAndResetTab","addTab","tabId","isUuid","watch","addItem","resetItem","editTab","addItemEvent","buy","sell","date","generateUuid","update","initAverageExchangeRateData","key","value","show","saveTabEvent","localCurrencyCode","foreignCurrencyCode","locale","config","configJson","checkAverageExchangeRateConfig","checkFormatCurrency","deleteData","deleteItemEvent","deleteTabEvent","checkNumberAndReturn","newValue","newNumber","configIsValid","jsonData","isAverageExchangeRateData","app","createBaseApp","App","vuetify"],"mappings":"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"}
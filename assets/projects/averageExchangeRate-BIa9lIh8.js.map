{"version":3,"file":"averageExchangeRate-BIa9lIh8.js","sources":["../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constants.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/constructFrom.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/toDate.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/defaultOptions.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfWeek.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfISOWeek.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getISOWeekYear.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/normalizeDates.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfDay.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/differenceInCalendarDays.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfISOWeekYear.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isDate.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/isValid.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfYear.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatDistance.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildFormatLongFn.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatLong.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/formatRelative.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildLocalizeFn.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/localize.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchFn.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US/_lib/match.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/locale/en-US.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getDayOfYear.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getISOWeek.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getWeekYear.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/startOfWeekYear.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/getWeek.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/addLeadingZeros.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/lightFormatters.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/formatters.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/format/longFormatters.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/_lib/protectedTokens.js","../../../node_modules/.pnpm/date-fns@4.1.0/node_modules/date-fns/format.js","../../../src/utils/converts.ts","../../../src/views/projects/AverageExchangeRate/index.ts","../../../src/utils/StorageManager.ts","../../../src/views/projects/AverageExchangeRate/App.vue?vue&type=script&setup=true&lang.ts","../../../src/views/projects/AverageExchangeRate/main.ts"],"sourcesContent":["/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","export type ConvertData<T, I, O> = T extends I\n  ? O\n  : T extends I | null\n    ? O | null\n    : T extends I | undefined\n      ? O | undefined\n      : T extends I | null | undefined\n        ? O | null | undefined\n        : T\n\nexport function convertToDate<T extends string | null | undefined>(\n  data: T,\n): ConvertData<T, string, Date> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-explicit-any\n  return (typeof data === 'string' ? new Date(data) : data) as any\n}\n\nexport function convertField<T extends object, K extends keyof T, V>(\n  list: T[],\n  field: K,\n  convertToAny: (value: T[K]) => V,\n): (Omit<T, K> & Record<K, V>)[] {\n  return list.map((item) => {\n    const newItem = { ...item, [field]: convertToAny(item[field]) } as Omit<T, K> & Record<K, V>\n    return newItem\n  })\n}\n","import typia from 'typia'\n\nimport type { UUID } from '@/types'\nimport { errorHandle, isTruthyString } from '@/utils'\n\nexport interface AverageExchangeRateItem {\n  id: UUID\n  date: string\n  sell: number\n  buy: number\n}\nexport interface AverageExchangeRateData {\n  title: string\n  list: AverageExchangeRateItem[]\n  amount: number\n  localCurrencyCode: string | null\n  foreignCurrencyCode: string | null\n  locale: string | null\n}\nexport function initAverageExchangeRateData(): AverageExchangeRateData {\n  return {\n    title: '新標籤',\n    list: [],\n    amount: 0,\n    localCurrencyCode: null,\n    foreignCurrencyCode: null,\n    locale: null,\n  }\n}\n\nexport type AverageExchangeRateGroup = Record<UUID, AverageExchangeRateData>\nexport const isAverageExchangeRateGroup = typia.createIs<AverageExchangeRateGroup>()\nexport const isAverageExchangeRateData = typia.createIs<AverageExchangeRateData>()\n\nexport function formatCurrency(\n  amount: number,\n  locale: string | null | undefined,\n  currency: string | null | undefined,\n): string {\n  if (isTruthyString(currency) && isTruthyString(locale)) {\n    try {\n      return amount.toLocaleString(locale, {\n        style: 'currency',\n        currency,\n        minimumFractionDigits: 0,\n      })\n    } catch (error) {\n      errorHandle('parse currency and locale failed', { error })\n    }\n  }\n  try {\n    if (isTruthyString(locale)) {\n      return amount.toLocaleString(locale)\n    }\n  } catch (error) {\n    errorHandle('parse locale failed', { error })\n  }\n  return amount.toLocaleString()\n}\n\nexport function checkFormatCurrency({\n  locale,\n  localCurrencyCode,\n  foreignCurrencyCode,\n}: Record<'locale' | 'localCurrencyCode' | 'foreignCurrencyCode', string>): void {\n  const amount = 0\n  try {\n    if (isTruthyString(locale)) {\n      amount.toLocaleString(locale)\n      if (isTruthyString(localCurrencyCode)) {\n        try {\n          amount.toLocaleString(locale, {\n            style: 'currency',\n            currency: localCurrencyCode,\n          })\n        } catch (error) {\n          errorHandle('本幣代碼錯誤', { error, type: 'alert' })\n        }\n      }\n      if (isTruthyString(foreignCurrencyCode)) {\n        try {\n          amount.toLocaleString(locale, {\n            style: 'currency',\n            currency: foreignCurrencyCode,\n          })\n        } catch (error) {\n          errorHandle('外幣代碼錯誤', { error, type: 'alert' })\n        }\n      }\n    }\n  } catch (error) {\n    errorHandle('語系代碼錯誤', { error, type: 'alert' })\n  }\n}\n","import { errorHandle } from '@/utils'\nimport {\n  isAverageExchangeRateGroup,\n  type AverageExchangeRateGroup,\n} from '@/views/projects/AverageExchangeRate'\n\nclass StorageManager<StorageTyping extends Record<string, unknown>> {\n  private readonly storage: Storage\n  private readonly typeChecker: TypeChecker<StorageTyping>\n\n  public constructor(storage: Storage, typeChecker: TypeChecker<StorageTyping>) {\n    this.storage = storage\n    this.typeChecker = typeChecker\n  }\n\n  public get<Key extends Extract<keyof StorageTyping, string>>(\n    key: Key,\n  ): StorageTyping[Key] | null {\n    const sourceData = this.storage.getItem(key)\n    if (sourceData === null) {\n      return null\n    }\n    try {\n      const data: unknown = JSON.parse(sourceData)\n      if (this.typeChecker[key](data)) {\n        return data\n      }\n      errorHandle(`storage ${key} check typing failed`)\n    } catch (error) {\n      errorHandle(`storage ${key} parse failed`, { error, type: 'alert' })\n    }\n    return null\n  }\n\n  public set<Key extends Extract<keyof StorageTyping, string>>(\n    key: Key,\n    value: StorageTyping[Key],\n  ): void {\n    if (!this.typeChecker[key](value)) {\n      throw new Error(`Type error: Invalid data type for key \"${key}\"`)\n    }\n    this.storage.setItem(key, JSON.stringify(value))\n  }\n\n  public remove(key: Extract<keyof StorageTyping, string>): void {\n    this.storage.removeItem(key)\n  }\n}\n\ntype TypeChecker<StorageTyping> = {\n  [key in keyof StorageTyping]: (data: unknown) => data is StorageTyping[key]\n}\n\nexport const localStorageManager = new StorageManager<{\n  averageExchangeRate: AverageExchangeRateGroup\n}>(localStorage, {\n  averageExchangeRate: isAverageExchangeRateGroup,\n})\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport const sessionStorageManager = new StorageManager<{}>(sessionStorage, {})\n","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, unref as _unref } from \"vue\"\n\nconst _hoisted_1 = { class: \"m-24px flex-col gap-8px\" }\nconst _hoisted_2 = { class: \"flex-center w-full gap-4px\" }\nconst _hoisted_3 = { class: \"flex-1\" }\nconst _hoisted_4 = { class: \"flex-1\" }\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = { class: \"flex-col gap-8px\" }\nconst _hoisted_7 = { class: \"flex items-center justify-between w-full\" }\n\nimport { format } from 'date-fns'\nimport { computed, onMounted, ref, watch } from 'vue'\n\nimport type { UUID } from '@/types'\nimport { generateUuid, isTruthyString, roundNumber } from '@/utils'\nimport { isUuid } from '@/utils/checkTyping'\nimport { convertField, convertToDate } from '@/utils/converts'\nimport { sortListByDate } from '@/utils/sorts'\nimport { localStorageManager } from '@/utils/StorageManager'\n\nimport {\n  type AverageExchangeRateItem,\n  type AverageExchangeRateData,\n  type AverageExchangeRateGroup,\n  initAverageExchangeRateData,\n  formatCurrency,\n  checkFormatCurrency,\n  isAverageExchangeRateData,\n} from '.'\n\ninterface DataRow {\n  id: UUID\n  date: string\n  sell: number\n  buy: number\n  exchangeRate: number\n  balance: number\n}\ninterface TableRow {\n  id: UUID\n  date: string\n  sell: string\n  buy: string\n  exchangeRate: number\n  balance: string\n}\n\ninterface EditTab {\n  title: string\n  localCurrencyCode: string\n  foreignCurrencyCode: string\n  locale: string\n  config: string\n}\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\nconst headers = computed(\n  () =>\n    [\n      { title: '日期', key: 'date', nowrap: true, sortable: false },\n      {\n        title: `賣出${localCurrencyString.value}`,\n        key: 'sell',\n        nowrap: true,\n        sortable: false,\n        align: 'end',\n      },\n      {\n        title: `買入${foreignCurrencyString.value}`,\n        key: 'buy',\n        nowrap: true,\n        sortable: false,\n        align: 'end',\n      },\n      { title: '匯率', key: 'exchangeRate', nowrap: true, sortable: false },\n      {\n        title: `剩餘${foreignCurrencyString.value}`,\n        key: 'balance',\n        nowrap: true,\n        sortable: false,\n        align: 'end',\n      },\n      {\n        key: 'actions',\n        sortable: false,\n      },\n    ] as const,\n)\n\nconst rows = computed((): TableRow[] => {\n  return dataRows.value.map((item) => ({\n    ...item,\n    sell: formatCurrency(\n      item.sell,\n      currentData.value?.locale,\n      currentData.value?.localCurrencyCode,\n    ),\n    buy: formatCurrency(\n      item.buy,\n      currentData.value?.locale,\n      currentData.value?.foreignCurrencyCode,\n    ),\n    balance: formatCurrency(\n      item.balance,\n      currentData.value?.locale,\n      currentData.value?.foreignCurrencyCode,\n    ),\n  }))\n})\nconst dataRows = computed((): DataRow[] => {\n  let totalAmount = currentAmount.value\n  return sortListByDate(convertField(currentList.value, 'date', convertToDate), 'date', 'desc').map(\n    (item) => {\n      const balance = totalAmount > item.buy ? item.buy : totalAmount\n      totalAmount -= balance\n      return {\n        id: item.id,\n        date: format(item.date, 'yyyy/MM/dd'),\n        sell: item.sell,\n        buy: item.buy,\n        exchangeRate: roundNumber(item.sell / item.buy, 4),\n        balance,\n      }\n    },\n  )\n})\nconst averageRate = computed((): number => {\n  let sellTotal = 0\n  let buyTotal = 0\n  for (const item of dataRows.value) {\n    if (item.balance > 0) {\n      buyTotal += item.balance\n      sellTotal += item.balance * item.exchangeRate\n    }\n  }\n  return buyTotal === 0 ? 0 : roundNumber(sellTotal / buyTotal, 4)\n})\n\nconst showAddItemDialog = ref(false)\nconst showEditTabDialog = ref(false)\nconst selectedTab = ref<UUID | null>(null)\nconst restoreData = ref<AverageExchangeRateGroup>({})\nconst currentData = computed((): AverageExchangeRateData | null =>\n  selectedTab.value !== null ? (restoreData.value[selectedTab.value] ?? null) : null,\n)\nconst currentList = computed((): AverageExchangeRateItem[] => currentData.value?.list ?? [])\nconst currentAmount = computed((): number => currentData.value?.amount ?? 0)\nconst tabs = computed((): { id: string; title: string }[] => {\n  return Object.entries(restoreData.value).map(([id, { title }]) => ({ id, title }))\n})\nconst localCurrencyString = computed(() =>\n  isTruthyString(currentData.value?.localCurrencyCode)\n    ? ` ${currentData.value.localCurrencyCode}`\n    : '本幣',\n)\nconst foreignCurrencyString = computed(() =>\n  isTruthyString(currentData.value?.foreignCurrencyCode)\n    ? ` ${currentData.value.foreignCurrencyCode}`\n    : '外幣',\n)\n\nonMounted(() => {\n  restoreData.value = localStorageManager.get('averageExchangeRate') ?? {}\n  checkAndResetTab()\n})\nfunction checkAndResetTab(): void {\n  if (Object.keys(restoreData.value).length === 0) {\n    addTab()\n  }\n  localStorageManager.set('averageExchangeRate', restoreData.value)\n  const tabId = Object.keys(restoreData.value)[0]\n  if (isUuid(tabId)) {\n    selectedTab.value = tabId\n  }\n}\n\nwatch(showAddItemDialog, () => {\n  addItem.value = resetItem()\n})\nfunction resetItem(): Omit<AverageExchangeRateItem, 'id'> {\n  return {\n    sell: 0,\n    buy: 0,\n    date: format(new Date(), \"yyyy-MM-dd'T'HH:mm\"),\n  }\n}\n\nconst addItem = ref<Omit<AverageExchangeRateItem, 'id'>>(resetItem())\nconst editTab = ref<EditTab | null>(null)\n\nfunction addItemEvent(): void {\n  const { buy, sell } = addItem.value\n  const date = new Date(addItem.value.date).toISOString()\n  const id = generateUuid()\n  update('list', [{ buy, sell, date, id }, ...currentList.value])\n  showAddItemDialog.value = false\n}\n\nfunction addTab(): void {\n  const id = generateUuid()\n  restoreData.value[id] = initAverageExchangeRateData()\n  selectedTab.value = id\n  localStorageManager.set('averageExchangeRate', restoreData.value)\n}\n\nfunction update<Key extends keyof AverageExchangeRateData>(\n  key: Key,\n  value: AverageExchangeRateData[Key],\n): void {\n  if (selectedTab.value === null) {\n    return\n  }\n  const data: AverageExchangeRateData =\n    restoreData.value[selectedTab.value] ?? initAverageExchangeRateData()\n  data[key] = value\n  localStorageManager.set('averageExchangeRate', restoreData.value)\n}\n\nwatch(showEditTabDialog, (show) => {\n  if (!show) {\n    editTab.value = null\n    return\n  } else if (currentData.value !== null) {\n    editTab.value = {\n      title: currentData.value.title,\n      localCurrencyCode: currentData.value.localCurrencyCode ?? '',\n      foreignCurrencyCode: currentData.value.foreignCurrencyCode ?? '',\n      locale: currentData.value.locale ?? '',\n      config: JSON.stringify(currentData.value, null, 2),\n    }\n  }\n})\n\nfunction saveTabEvent(): void {\n  if (editTab.value === null) {\n    return\n  }\n  const { title, localCurrencyCode, foreignCurrencyCode, locale, config } = editTab.value\n  const configJson = checkAverageExchangeRateConfig(config)\n  if (\n    configJson !== null &&\n    selectedTab.value !== null &&\n    JSON.stringify(configJson) !== JSON.stringify(currentData.value)\n  ) {\n    restoreData.value[selectedTab.value] = configJson\n  } else {\n    checkFormatCurrency({ locale, localCurrencyCode, foreignCurrencyCode })\n    update('title', title)\n    update('localCurrencyCode', isTruthyString(localCurrencyCode) ? localCurrencyCode : null)\n    update('foreignCurrencyCode', isTruthyString(foreignCurrencyCode) ? foreignCurrencyCode : null)\n    update('locale', isTruthyString(locale) ? locale : null)\n  }\n  showEditTabDialog.value = false\n}\n\nconst deleteData = ref<{ message: string; event: () => void } | null>(null)\nfunction deleteItemEvent({ id }: TableRow): void {\n  deleteData.value = {\n    message: '確定要刪除這筆資料嗎？',\n    event: (): void => {\n      update(\n        'list',\n        [...currentList.value].filter((item) => item.id !== id),\n      )\n      deleteData.value = null\n    },\n  }\n}\nfunction deleteTabEvent(id: UUID | null): void {\n  if (id === null) {\n    return\n  }\n  deleteData.value = {\n    message: '確定要刪除這張表嗎？',\n    event: (): void => {\n      // eslint-disable-next-line security/detect-object-injection, @typescript-eslint/no-dynamic-delete\n      delete restoreData.value[id]\n      checkAndResetTab()\n      deleteData.value = null\n      showEditTabDialog.value = false\n    },\n  }\n}\n\nfunction checkNumberAndReturn(newValue: string): number {\n  const newNumber = parseFloat(newValue)\n  return isNaN(newNumber) ? 0 : newNumber\n}\n\nconst configIsValid = ref(true)\nwatch(\n  () => editTab.value?.config,\n  (data) => {\n    configIsValid.value = Boolean(checkAverageExchangeRateConfig(data))\n  },\n)\nfunction checkAverageExchangeRateConfig(data: string | undefined): AverageExchangeRateData | null {\n  if (data === undefined) {\n    return null\n  }\n  let jsonData: unknown\n  try {\n    jsonData = JSON.parse(data)\n  } catch {\n    return null\n  }\n  return isAverageExchangeRateData(jsonData) ? jsonData : null\n}\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_v_tab = _resolveComponent(\"v-tab\")!\n  const _component_v_tabs = _resolveComponent(\"v-tabs\")!\n  const _component_v_text_field = _resolveComponent(\"v-text-field\")!\n  const _component_v_data_table = _resolveComponent(\"v-data-table\")!\n  const _component_v_btn = _resolveComponent(\"v-btn\")!\n  const _component_v_card = _resolveComponent(\"v-card\")!\n  const _component_v_dialog = _resolveComponent(\"v-dialog\")!\n  const _component_v_textarea = _resolveComponent(\"v-textarea\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"main\", _hoisted_1, [\n      _createVNode(_component_v_tabs, {\n        modelValue: selectedTab.value,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((selectedTab).value = $event)),\n        \"align-tabs\": \"center\",\n        color: \"deep-purple-accent-4\"\n      }, {\n        default: _withCtx(() => [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(tabs.value, ({ id, title }, index) => {\n            return (_openBlock(), _createBlock(_component_v_tab, {\n              key: index,\n              value: id\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(title) + \" \", 1),\n                (id === selectedTab.value)\n                  ? (_openBlock(), _createElementBlock(\"p\", {\n                      key: 0,\n                      class: \"w-24px h-24px flex-center\",\n                      onClick: _cache[0] || (_cache[0] = ($event: any) => (showEditTabDialog.value = true))\n                    }, _cache[18] || (_cache[18] = [\n                      _createElementVNode(\"i\", { class: \"fa-solid fa-pen ml-4px\" }, null, -1)\n                    ])))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 2\n            }, 1032, [\"value\"]))\n          }), 128)),\n          _createVNode(_component_v_tab, { onClick: addTab }, {\n            default: _withCtx(() => _cache[19] || (_cache[19] = [\n              _createElementVNode(\"i\", { class: \"fas fa-plus text-16px\" }, null, -1)\n            ])),\n            _: 1\n          })\n        ]),\n        _: 1\n      }, 8, [\"modelValue\"]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(_component_v_text_field, {\n            \"model-value\": currentAmount.value,\n            label: `剩餘${foreignCurrencyString.value}`,\n            \"hide-details\": \"auto\",\n            inputmode: \"decimal\",\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = \n            (newValue) => update('amount', checkNumberAndReturn(newValue))\n          )\n          }, null, 8, [\"model-value\", \"label\"])\n        ]),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createVNode(_component_v_text_field, {\n            \"model-value\": averageRate.value,\n            \"hide-details\": \"auto\",\n            label: \"平均匯率\",\n            disabled: \"\"\n          }, null, 8, [\"model-value\"])\n        ])\n      ]),\n      _createVNode(_component_v_data_table, {\n        headers: headers.value,\n        items: rows.value\n      }, {\n        \"item.actions\": _withCtx(({ item }) => [\n          _createElementVNode(\"i\", {\n            class: \"fa-solid fa-trash\",\n            onClick: ($event: any) => (deleteItemEvent(item))\n          }, null, 8, _hoisted_5)\n        ]),\n        _: 1\n      }, 8, [\"headers\", \"items\"]),\n      _createElementVNode(\"div\", {\n        class: \"fixed bottom-24px right-24px\",\n        onClick: _cache[3] || (_cache[3] = ($event: any) => (showAddItemDialog.value = true))\n      }, [\n        _createVNode(_component_v_btn, { icon: \"\" }, {\n          default: _withCtx(() => _cache[20] || (_cache[20] = [\n            _createElementVNode(\"i\", { class: \"fas fa-plus\" }, null, -1)\n          ])),\n          _: 1\n        })\n      ])\n    ]),\n    _createVNode(_component_v_dialog, {\n      modelValue: showAddItemDialog.value,\n      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((showAddItemDialog).value = $event))\n    }, {\n      default: _withCtx(() => [\n        _createVNode(_component_v_card, {\n          \"prepend-icon\": \"mdi-update\",\n          title: \"Add Item\"\n        }, {\n          text: _withCtx(() => [\n            _createVNode(_component_v_text_field, {\n              modelValue: addItem.value.date,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((addItem.value.date) = $event)),\n              type: \"datetime-local\",\n              \"hide-details\": \"auto\",\n              label: \"交易日期\"\n            }, null, 8, [\"modelValue\"]),\n            _createVNode(_component_v_text_field, {\n              \"model-value\": addItem.value.sell,\n              \"hide-details\": \"auto\",\n              inputmode: \"decimal\",\n              label: `賣出${localCurrencyString.value}`,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = \n            (newValue) => (addItem.value.sell = checkNumberAndReturn(newValue))\n          )\n            }, null, 8, [\"model-value\", \"label\"]),\n            _createVNode(_component_v_text_field, {\n              \"model-value\": addItem.value.buy,\n              \"hide-details\": \"auto\",\n              inputmode: \"decimal\",\n              label: `買入${foreignCurrencyString.value}`,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = (newValue) => (addItem.value.buy = checkNumberAndReturn(newValue)))\n            }, null, 8, [\"model-value\", \"label\"]),\n            _createVNode(_component_v_text_field, {\n              \"hide-details\": \"auto\",\n              label: \"平均匯率\",\n              \"model-value\": addItem.value.buy === 0 ? 0 : _unref(roundNumber)(addItem.value.sell / addItem.value.buy, 4),\n              disabled: \"\"\n            }, null, 8, [\"model-value\"])\n          ]),\n          actions: _withCtx(() => [\n            _createVNode(_component_v_btn, {\n              class: \"ms-auto\",\n              text: \"Submit\",\n              onClick: addItemEvent\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }, 8, [\"modelValue\"]),\n    _createVNode(_component_v_dialog, {\n      modelValue: showEditTabDialog.value,\n      \"onUpdate:modelValue\": _cache[15] || (_cache[15] = ($event: any) => ((showEditTabDialog).value = $event))\n    }, {\n      default: _withCtx(() => [\n        (editTab.value !== null)\n          ? (_openBlock(), _createBlock(_component_v_card, {\n              key: 0,\n              \"prepend-icon\": \"mdi-update\",\n              title: \"Setting\"\n            }, {\n              text: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_6, [\n                  _createVNode(_component_v_text_field, {\n                    modelValue: editTab.value.title,\n                    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((editTab.value.title) = $event)),\n                    \"hide-details\": \"auto\",\n                    label: \"標籤名稱\"\n                  }, null, 8, [\"modelValue\"]),\n                  _createVNode(_component_v_text_field, {\n                    modelValue: editTab.value.locale,\n                    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((editTab.value.locale) = $event)),\n                    \"hide-details\": \"auto\",\n                    label: \"語系代碼\",\n                    placeholder: \"zh-TW\"\n                  }, null, 8, [\"modelValue\"]),\n                  _createVNode(_component_v_text_field, {\n                    modelValue: editTab.value.localCurrencyCode,\n                    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((editTab.value.localCurrencyCode) = $event)),\n                    \"hide-details\": \"auto\",\n                    label: \"本幣代碼\",\n                    placeholder: \"TWD\"\n                  }, null, 8, [\"modelValue\"]),\n                  _createVNode(_component_v_text_field, {\n                    modelValue: editTab.value.foreignCurrencyCode,\n                    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((editTab.value.foreignCurrencyCode) = $event)),\n                    \"hide-details\": \"auto\",\n                    label: \"外幣代碼\",\n                    placeholder: \"JPY\"\n                  }, null, 8, [\"modelValue\"]),\n                  _createVNode(_component_v_textarea, {\n                    modelValue: editTab.value.config,\n                    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((editTab.value.config) = $event)),\n                    \"error-messages\": configIsValid.value ? '' : 'json 無效',\n                    label: \"設定檔\",\n                    messages: \"若有修改到設定檔上方其他設定就會忽略\"\n                  }, null, 8, [\"modelValue\", \"error-messages\"])\n                ])\n              ]),\n              actions: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_7, [\n                  _createVNode(_component_v_btn, {\n                    text: \"Delete\",\n                    color: \"red\",\n                    onClick: _cache[13] || (_cache[13] = ($event: any) => (deleteTabEvent(selectedTab.value)))\n                  }),\n                  _createElementVNode(\"div\", null, [\n                    _createVNode(_component_v_btn, {\n                      text: \"Cancel\",\n                      onClick: _cache[14] || (_cache[14] = ($event: any) => (showEditTabDialog.value = false))\n                    }),\n                    _createVNode(_component_v_btn, {\n                      text: \"Save\",\n                      color: \"blue\",\n                      onClick: saveTabEvent\n                    })\n                  ])\n                ])\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _: 1\n    }, 8, [\"modelValue\"]),\n    _createVNode(_component_v_dialog, {\n      \"model-value\": Boolean(deleteData.value),\n      \"onUpdate:modelValue\": _cache[17] || (_cache[17] = ($event: any) => (deleteData.value = null))\n    }, {\n      default: _withCtx(() => [\n        _createVNode(_component_v_card, {\n          class: \"mx-auto\",\n          \"max-width\": \"320\",\n          title: \"Update Field\"\n        }, {\n          text: _withCtx(() => [\n            _createTextVNode(_toDisplayString(deleteData.value?.message ?? ''), 1)\n          ]),\n          actions: _withCtx(() => [\n            _createVNode(_component_v_btn, {\n              class: \"ms-auto\",\n              text: \"Cancel\",\n              onClick: _cache[16] || (_cache[16] = ($event: any) => (deleteData.value = null))\n            }),\n            _createVNode(_component_v_btn, {\n              class: \"ms-auto\",\n              color: \"red\",\n              text: \"Delete\",\n              onClick: deleteData.value?.event\n            }, null, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }, 8, [\"model-value\"])\n  ], 64))\n}\n}\n\n})","import { createBaseApp } from '@/base'\n\nimport App from './App.vue'\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\nconst app = createBaseApp(App)\n\napp.mount('#app')\n"],"names":["millisecondsInWeek","millisecondsInDay","constructFromSymbol","constructFrom","date","value","toDate","argument","context","defaultOptions","getDefaultOptions","startOfWeek","options","weekStartsOn","_b","_a","_d","_c","_date","day","diff","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTimezoneOffsetInMilliseconds","utcDate","normalizeDates","dates","normalize","startOfDay","differenceInCalendarDays","laterDate","earlierDate","laterDate_","earlierDate_","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","startOfISOWeekYear","fourthOfJanuary","isDate","isValid","startOfYear","date_","formatDistanceLocale","formatDistance","token","count","result","tokenValue","buildFormatLongFn","args","width","dateFormats","timeFormats","dateTimeFormats","formatLong","formatRelativeLocale","formatRelative","_baseDate","_options","buildLocalizeFn","valuesArray","defaultWidth","index","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","number","rem100","localize","quarter","buildMatchFn","string","matchPattern","matchResult","matchedString","parsePatterns","key","findIndex","pattern","findKey","rest","object","predicate","array","buildMatchPatternFn","parseResult","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","enUS","getDayOfYear","getISOWeek","getWeekYear","firstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","sign","output","lightFormatters","signedYear","month","dayPeriodEnumValue","numberOfDigits","milliseconds","fractionalSeconds","dayPeriodEnum","formatters","era","signedWeekYear","weekYear","twoDigitYear","isoWeekYear","week","isoWeek","dayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","hours","_localize","timezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","formatTimezoneShort","timestamp","offset","delimiter","absOffset","minutes","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","message","subject","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","locale","defaultLocale","originalDate","parts","substring","firstCharacter","longFormatter","cleanEscapedString","formatterOptions","part","formatter","matched","convertToDate","data","convertField","list","field","convertToAny","item","initAverageExchangeRateData","isAverageExchangeRateGroup","$io0","$io1","elem","$io2","isAverageExchangeRateData","formatCurrency","amount","currency","isTruthyString","error","errorHandle","checkFormatCurrency","localCurrencyCode","foreignCurrencyCode","StorageManager","storage","typeChecker","__publicField","sourceData","localStorageManager","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_sfc_main","_defineComponent","__props","headers","computed","localCurrencyString","foreignCurrencyString","rows","dataRows","currentData","_e","_f","totalAmount","currentAmount","sortListByDate","currentList","balance","roundNumber","averageRate","sellTotal","buyTotal","showAddItemDialog","ref","showEditTabDialog","selectedTab","restoreData","tabs","id","title","onMounted","checkAndResetTab","addTab","tabId","isUuid","watch","addItem","resetItem","editTab","addItemEvent","buy","sell","generateUuid","update","show","saveTabEvent","config","configJson","checkAverageExchangeRateConfig","deleteData","deleteItemEvent","deleteTabEvent","checkNumberAndReturn","newValue","newNumber","configIsValid","jsonData","_ctx","_cache","_component_v_tab","_resolveComponent","_component_v_tabs","_component_v_text_field","_component_v_data_table","_component_v_btn","_component_v_card","_component_v_dialog","_component_v_textarea","_openBlock","_createElementBlock","_Fragment","_createElementVNode","_createVNode","$event","_withCtx","_renderList","_createBlock","_createTextVNode","_toDisplayString","_createCommentVNode","_unref","app","createBaseApp","App"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35]}
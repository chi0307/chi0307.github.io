var we=Object.defineProperty;var ge=(l,t,a)=>t in l?we(l,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):l[t]=a;var _=(l,t,a)=>ge(l,typeof t!="symbol"?t+"":t,a);import{o as ve,b as U,c as te,f as Y,d as se,B as g,g as L,j as B,k as P,x as w,C as k,u as S,e as oe,F as D,l as X,v as F,D as ae,t as C,y as z,m as Me,K as Ae,E as fe,A as Le}from"../index-C0F7Xgzv.js";import{d as Re,s as ce,c as ke}from"../pinia-CdDSZeN-.js";import{C as Te,v as be}from"../StorageManager-Bsq_cY3p.js";import{a as pe,b as de}from"../sorts-BPW8KRTv.js";import{r as Ce,b as ne,g as ue,c as Be}from"../index-CZjE7_pj.js";import{_ as ie}from"../_plugin-vue_export-helper-DlAUqK2U.js";const T=Ce(2);class G{constructor({type:t,name:a,pointsPerMile:s,milesPerUnit:r}){_(this,"_type");_(this,"_name");_(this,"_pointsPerMile");_(this,"_milesPerUnit");this._type=t,this._name=a,this._pointsPerMile=s,this._milesPerUnit=r}get type(){return this._type}get name(){return this._name}get pointsPerMile(){return this._pointsPerMile}get milesPerUnit(){return this._milesPerUnit}_pointsConvertToMiles(t){return t*this._milesPerUnit/this._pointsPerMile}calculateRangeMilesCost(t,a){const s=[];for(let c=t;c<=a;c++){const p=T(c/this.calculateMiles(c));isNaN(p)||p===1/0||p===-1/0||s.push(p)}s.sort((c,p)=>c-p);const r=s[s.length-1],o=s[0];if(r===void 0||o===void 0)throw new Error("cannot be calculated");const n=s.reduce((c,p)=>c+p,0)/s.length;return{max:r,min:o,average:T(n)}}}class Se extends G{constructor({pointBackRates:a,...s}){super(s);_(this,"_pointBackRates");this._pointBackRates=a}get pointBackRates(){return this._pointBackRates}get _maxRete(){return this._pointBackRates.reduce((a,{rate:s})=>a+s,0)}get baselineCostPerMile(){return T(100/this._pointsConvertToMiles(this._maxRete))}get bestCaseCostPerMile(){return T(Math.ceil(100/this._maxRete/2)/this._pointsConvertToMiles(1))}get maximumCostPerMile(){return T((Math.ceil(150/this._maxRete)-1)/this._pointsConvertToMiles(1))}get description(){return`消費${this._pointBackRates.length>1?"最高":""}${this._maxRete.toString()}%回饋點數(四捨五入)，${this._pointsPerMile.toString()}點兌換${this._milesPerUnit.toString()}哩程`}calculateMiles(a){let s=0;for(const{rate:r,limit:o=1/0}of this._pointBackRates)s+=Math.min(Math.round(a*(r/100)),o);return T(this._pointsConvertToMiles(s))}toJSON(){return{type:this._type,name:this._name,pointsPerMile:this._pointsPerMile,milesPerUnit:this._milesPerUnit,pointBackRates:this._pointBackRates}}}class Ue extends G{constructor({pointBackRates:a,...s}){super(s);_(this,"_pointBackRates");this._pointBackRates=a}get pointBackRates(){return this._pointBackRates}get _maxRete(){return this._pointBackRates.reduce((a,{rate:s})=>a+s,0)}get baselineCostPerMile(){return T(100/this._pointsConvertToMiles(this._maxRete))}get bestCaseCostPerMile(){return this.baselineCostPerMile}get maximumCostPerMile(){return T((Math.ceil(200/this._maxRete)-1)/this._pointsConvertToMiles(1))}get description(){return`消費${this._pointBackRates.length>1?"最高":""}${this._maxRete.toString()}%回饋點數(無條件捨去)，${this._pointsPerMile.toString()}點兌換${this._milesPerUnit.toString()}哩程`}calculateMiles(a){let s=0;for(const{rate:r,limit:o=1/0}of this._pointBackRates)s+=Math.min(Math.floor(a*(r/100)),o);return T(this._pointsConvertToMiles(s))}toJSON(){return{type:this._type,name:this._name,pointsPerMile:this._pointsPerMile,milesPerUnit:this._milesPerUnit,pointBackRates:this._pointBackRates}}}class xe extends G{constructor({spendingPerPoint:a,...s}){super(s);_(this,"_spendingPerPoint");this._spendingPerPoint=a}get spendingPerPoint(){return this._spendingPerPoint}get baselineCostPerMile(){return T(this._spendingPerPoint/this._pointsConvertToMiles(1))}get bestCaseCostPerMile(){return this.baselineCostPerMile}get maximumCostPerMile(){return T((this._spendingPerPoint*2-1)/this._pointsConvertToMiles(1))}get description(){return`每消費${this._spendingPerPoint.toString()}元累積1點，${this._pointsPerMile.toString()}點兌換${this._milesPerUnit.toString()}哩程`}calculateMiles(a){const s=Math.floor(a/this._spendingPerPoint);return T(this._pointsConvertToMiles(s))}toJSON(){return{type:this._type,name:this._name,pointsPerMile:this._pointsPerMile,milesPerUnit:this._milesPerUnit,spendingPerPoint:this._spendingPerPoint}}}class Ee extends G{constructor({spendingPerMile:a,...s}){super({...s,pointsPerMile:1,milesPerUnit:1});_(this,"_spendingPerMile");this._spendingPerMile=a}get spendingPerMile(){return this._spendingPerMile}get baselineCostPerMile(){return this._spendingPerMile}get bestCaseCostPerMile(){return this.baselineCostPerMile}get maximumCostPerMile(){return this.baselineCostPerMile}get description(){return`每消費${this._spendingPerMile.toString()}元累積1哩程 (小數會進行累計)`}calculateMiles(a){return T(a/this._spendingPerMile)}toJSON(){return{type:this._type,name:this._name,spendingPerMile:this._spendingPerMile}}}class Oe extends G{constructor({spendingPerMile:a,...s}){super({...s,pointsPerMile:1,milesPerUnit:1});_(this,"_spendingPerMile");this._spendingPerMile=a}get spendingPerMile(){return this._spendingPerMile}get baselineCostPerMile(){return this._spendingPerMile}get bestCaseCostPerMile(){return this.baselineCostPerMile}get maximumCostPerMile(){return this._spendingPerMile+this._spendingPerMile-1}get description(){return`每消費${this._spendingPerMile.toString()}元累積1哩程 (小數不累計)`}calculateMiles(a){return Math.floor(a/this._spendingPerMile)}toJSON(){return{type:this._type,name:this._name,spendingPerMile:this._spendingPerMile}}}const Ie={RoundedPointsReward:Se,TruncatedPointsReward:Ue,PointsRewardPerThreshold:xe,CumulativeMilesReward:Ee,DirectMilesReward:Oe};function Ne(l){return new Ie[l.type](l)}class $e{constructor(t,a,s){_(this,"_name");_(this,"_rewards");_(this,"_condition");if(this._name=t,this._condition=a,s.length===0)throw new Error(`Plan "${t??"unknown"}" must have at least one reward rule.`);this._rewards=s}get name(){return this._name}get storeList(){return ne(this._rewards.flatMap(t=>[...t.stores]))}checkPlanIsVisible(t){return this._condition===null||!!(t!=null&&t.includes(this._condition))}getApplicableReward({transactionStore:t=null,acceptedPayments:a=[],transactionAttributesType:s,currentConditions:r=null}){return this._condition!==null&&!(r!=null&&r.includes(this._condition))?null:this._rewards.find(({stores:o,payments:n,transactionType:c,paymentBlackList:p,storeBlackList:m,condition:M})=>{const b=t===null||o.size===0||o.has(t),A=t===null||m.size===0||!m.has(t),e=a.length===0||n.size===0||a.some(u=>n.has(u)),i=a.length===0||p.size===0||a.some(u=>!p.has(u)),h=c===null||s===c,J=M===null||!!(r!=null&&r.includes(M));return b&&A&&e&&i&&h&&J})??null}getRewardMiles({transactionStore:t,acceptedPayments:a,amount:s,transactionAttributesType:r,currentConditions:o}){const n=this.getApplicableReward({acceptedPayments:a,transactionStore:t,transactionAttributesType:r,currentConditions:o});if(n===null)return null;const c=a===void 0?[...n.payments.values()]:a.filter(p=>n.payments.has(p));return{name:n.reward.name,miles:n.reward.calculateMiles(s),payments:c.filter(p=>!n.paymentBlackList.has(p)),reward:n.reward}}toJSON(){return{name:this._name,condition:this._condition,rewards:this._rewards.map(({reward:t,stores:a,payments:s,transactionType:r,paymentBlackList:o,storeBlackList:n,condition:c})=>({reward:t.toJSON(),stores:[...a.values()],storeBlackList:[...n.values()],payments:[...s.values()],paymentBlackList:[...o.values()],transactionType:r,condition:c}))}}}const Ve=["信用卡","Apple Pay","Samsung Pay","Google Pay","Line Pay","Fitbit Pay","Garmin Pay","Hami Pay","街口支付","全盈+PAY","全支付","Pi錢包","橘子支付","歐付寶","icash pay","OPEN錢包","My FamiPay","悠遊付","ezPay","GOMAJI Pay","friday wallet","PayPal","PX Pay","中油Pay","台灣Pay","支付寶"],De={SJX:"星宇航空",EVA:"長榮航空",ANA:"全日空",JAL:"日航",CPA:"國泰航空",CAL:"華航"};class me{constructor({name:t,description:a,plans:s,storeBlackList:r,paymentBlackList:o,cardUrl:n,updateAt:c,airLines:p}){_(this,"_selectedPlanId");_(this,"_name");_(this,"_description");_(this,"_plans");_(this,"_cardUrl");_(this,"_storeBlackList");_(this,"_paymentBlackList");_(this,"_updateAt");_(this,"_airLines");this._name=t,this._description=a,this._plans=s,this._cardUrl=n,this._storeBlackList=r,this._paymentBlackList=o,this._updateAt=c,this._airLines=p;const m=this._plans.keys().next().value;if(this._plans.size===0||m===void 0)throw new Error("this credit card no any plan");this._selectedPlanId=m}get airLines(){return De[this._airLines]}get airLinesCode(){return this._airLines}get selectedPlan(){return this._getPlan(this._selectedPlanId)}get name(){return this._name}get description(){return this._description}get selectedPlanId(){return this._selectedPlanId}get selectablePlan(){return[...this._plans.entries()].map(([t,{name:a}])=>({id:t,name:a}))}get storeList(){return ne([...[...this._plans.values()].flatMap(t=>t.storeList),...this._storeBlackList])}get cardUrl(){return this._cardUrl}updatePlan(t){return this._plans.get(t)?(this._selectedPlanId=t,!0):!1}_getPlan(t){const a=this._plans.get(t);if(a===void 0)throw new Error(`plan id ${t} not found. Available plans: ${[...this._plans.keys()].join(", ")}`);return a}_rewardMilesWithPlan(t,a){var p;const s=this._getPlan(t),r={planId:null,planName:s.name,name:null,miles:0,payments:[],reward:null},o=a.transactionStore!==void 0&&this._storeBlackList.has(a.transactionStore),n=(p=a.acceptedPayments)==null?void 0:p.some(m=>this._paymentBlackList.has(m));if(o||n)return r;const c=s.getRewardMiles(a);return c===null?r:{planId:t,planName:s.name,...c}}currentPlanRewardMiles(t){return this._rewardMilesWithPlan(this._selectedPlanId,t)}getAllPlanRewardMiles(t){return[...this._plans.keys()].filter(a=>this._getPlan(a).checkPlanIsVisible(t.currentConditions??null)).map(a=>this._rewardMilesWithPlan(a,t))}toJSON(){return{name:this._name,description:this._description,cardUrl:this._cardUrl,storeBlackList:[...this._storeBlackList.values()],paymentBlackList:[...this._paymentBlackList.values()],plans:[...this._plans.values()].map(t=>t.toJSON()),updateAt:this._updateAt.toISOString(),airLines:this._airLines}}}function Fe({name:l,description:t,storeBlackList:a,paymentBlackList:s,cardUrl:r,plans:o,updateAt:n,airLines:c}){const p=new Map(o.map(({name:m,condition:M,rewards:b})=>[ue(),new $e(m,M??null,b.map(({stores:A,payments:e,transactionType:i,reward:h,paymentBlackList:J,storeBlackList:u,condition:d})=>({reward:Ne(h),stores:new Set(A),storeBlackList:new Set(u),payments:new Set(e),paymentBlackList:new Set(J),transactionType:i??null,condition:d??null})))]));return new me({name:l,description:t,plans:p,storeBlackList:new Set(a),paymentBlackList:new Set(s),cardUrl:r,updateAt:new Date(n),airLines:c})}const N=["分期付款"],$=[],j=["信用卡","Apple Pay","Samsung Pay","Google Pay","Fitbit Pay","Garmin Pay","Hami Pay"];function V(l,t,a){const s={reward:{type:"RoundedPointsReward",name:null,pointBackRates:[{rate:.3}],pointsPerMile:t,milesPerUnit:a}};return[{name:"集精選",rewards:[{reward:{type:"RoundedPointsReward",name:null,pointBackRates:[{rate:2}],pointsPerMile:t,milesPerUnit:a},stores:["家樂福","LOPIA台灣","全聯福利中心","台灣中油-直營","7-ELEVEN","全家便利商店","IKEA宜家家居"],payments:[...j,"PX Pay","My FamiPay","OPEN錢包"]},s]},{name:"玩數位",rewards:[{reward:{type:"RoundedPointsReward",name:null,pointBackRates:[{rate:l}],pointsPerMile:t,milesPerUnit:a},stores:["App Store","Apple Music","iCloud","Apple TV+","Apple Arcade","Apple One","iTunes","Google Play","Disney+","Netflix","Spotify","KKBOX","YouTube Premium","蝦皮購物","momo購物網","PChome 24h購物(不含儲值及電子票券)","博客來","小樹購","Coupang 酷澎(台灣)","淘寶/天貓"],paymentBlackList:["Line Pay","街口支付"]},{...s,storeBlackList:["全聯福利中心"]}]},{name:"樂饗購",rewards:[{reward:{type:"RoundedPointsReward",name:null,pointBackRates:[{rate:l}],pointsPerMile:t,milesPerUnit:a},stores:["遠東SOGO百貨","遠東Garden City","太平洋百貨","新光三越","SKM Park","BELLAVITA","微風廣場","遠東百貨","Big City遠東巨城購物中心","誠品生活","環球購物中心","CITYLINK","統一時代","台北101","ATT 4 FUN","明曜百貨","京站","美麗華","大葉高島屋","比漾廣場","大江國際購物中心","中友百貨","廣三SOGO","Tiger City","勤美誠品綠園道","大魯閣新時代","耐斯廣場","南紡購物中心","夢時代","漢神百貨","漢神巨蛋","MITSUI OUTLET PARK 林口","MITSUI OUTLET PARK 台中港","MITSUI OUTLET PARK 台南","Mitsui Shopping Park LaLaport 台中","義大世界購物廣場","華泰名品城","義享天地","麗寶OUTLET Mall","秀泰生活","台茂購物中心","新月廣場","三創生活","宏匯廣場","高雄棧貳庫/大港倉","NOKE忠泰樂生活","Uber Eats (不含 Uber One)","foodpanda","foodomo","國內餐飲(不含餐券)","麥當勞","康是美","屈臣氏"],payments:j},{...s,storeBlackList:["全聯福利中心"]}]},{name:"趣旅行",rewards:[{reward:{type:"RoundedPointsReward",name:null,pointBackRates:[{rate:l}],pointsPerMile:t,milesPerUnit:a},stores:["海外實體消費","東京迪士尼樂園","東京華納兄弟哈利波特影城","大阪環球影城(USJ)","吉卜力公園","Apple Wallet SUICA","Apple Wallet PASMO","Apple Wallet ICOCA","Uber","Grab","台灣高鐵","yoxi","台灣大車隊","iRent","和運租車","格上租車","中華航空","長榮航空","星宇航空","台灣虎航","國泰航空","樂桃航空","阿聯酋航空","酷航","捷星航空","日本航空","亞洲航空","聯合航空","ANA全日空","新加坡航空","越捷航空","大韓航空","達美航空","土耳其航空","卡達航空","法國航空","國內飯店住宿","星野集團","全球迪士尼飯店","東橫INN","KKday","Agoda","Klook","Airbnb","Hotels.com","Expedia","Booking.com","Trip.com","AsiaYo","ezTravel易遊網","雄獅旅遊","可樂旅遊","東南旅遊","五福旅遊","燦星旅遊","山富旅遊","長汎假期","鳳凰旅行社","Ezfly易飛網","理想旅遊","永利旅行社","三賀旅行社","173WIFI","JetFi mobile","威訊 WaySim","AIRSIM","SIM88"],payments:j},{...s,storeBlackList:["全聯福利中心"]}]},{name:"來支付",rewards:[{reward:{type:"RoundedPointsReward",name:null,pointBackRates:[{rate:2}],pointsPerMile:t,milesPerUnit:a},payments:["Line Pay"]},{...s,storeBlackList:["全聯福利中心"]}]},{name:"慶生月",condition:"Birthday",rewards:[{reward:{type:"RoundedPointsReward",name:null,pointBackRates:[{rate:10}],pointsPerMile:t,milesPerUnit:a},stores:["東京迪士尼樂園","大阪環球影城(USJ)","名古屋樂高樂園","紅葉蛋糕官方網站","法朋烘焙甜點坊","興波咖啡 華山旗艦店","海底撈火鍋","輕井澤鍋物","老四川巴蜀麻辣燙","二本松涮涮屋","橋山.壽喜燒","Umai屋馬燒肉","老井極上燒肉","燒肉中山(台中大墩)","藏壽司台灣","貳樓","膳馨民間創作料理","馨苑小料理","雅室牛排 仁愛圓環店","ABV餐飲集團","WAT","臺虎精釀(信義 | 西門 | 臺中 | 啜飲室大安)","BAR Bodega","BAR MED","JiN Her 今鶴","錢櫃KTV","好樂迪KTV","星聚點KTV","享溫馨KTV","Nintendo","巴哈姆特動畫瘋","閃動格子CyberCube"]},{reward:{type:"RoundedPointsReward",name:null,pointBackRates:[{rate:3.5}],pointsPerMile:t,milesPerUnit:a},stores:["新光三越","Uber Eats (不含 Uber One)","Agoda","Trip.com","Klook","國內飯店住宿","星野集團","全球迪士尼飯店","東橫INN"]},{...s,storeBlackList:["全聯福利中心"]}]}]}const Je=[{name:"Cube 卡",description:"Cube 卡 (Level 1) 回饋方案",cardUrl:"https://www.cathaybk.com.tw/cathaybk/personal/product/credit-card/cards/cube/",storeBlackList:N,paymentBlackList:$,updateAt:"2024-12-01T00:00:00.000Z",airLines:"EVA",plans:V(2,360,1e3)},{name:"Cube 卡",description:"Cube 卡 (Level 2) 回饋方案",cardUrl:"https://www.cathaybk.com.tw/cathaybk/personal/product/credit-card/cards/cube/",storeBlackList:N,paymentBlackList:$,updateAt:"2024-12-01T00:00:00.000Z",airLines:"EVA",plans:V(3,360,1e3)},{name:"Cube 卡",description:"Cube 卡 (Level 3) 回饋方案",cardUrl:"https://www.cathaybk.com.tw/cathaybk/personal/product/credit-card/cards/cube/",storeBlackList:N,paymentBlackList:$,updateAt:"2024-12-01T00:00:00.000Z",airLines:"EVA",plans:V(3.3,360,1e3)},{name:"Cube 卡",description:"Cube 卡 (Level 1) 回饋方案 + 長榮世界卡",cardUrl:"https://www.cathaybk.com.tw/cathaybk/personal/product/credit-card/cards/cube/",storeBlackList:N,paymentBlackList:$,updateAt:"2024-12-01T00:00:00.000Z",airLines:"EVA",plans:V(2,300,1e3)},{name:"Cube 卡",description:"Cube 卡 (Level 2) 回饋方案 + 長榮世界卡",cardUrl:"https://www.cathaybk.com.tw/cathaybk/personal/product/credit-card/cards/cube/",storeBlackList:N,paymentBlackList:$,updateAt:"2024-12-01T00:00:00.000Z",airLines:"EVA",plans:V(3,300,1e3)},{name:"Cube 卡",description:"Cube 卡 (Level 3) 回饋方案 + 長榮世界卡",cardUrl:"https://www.cathaybk.com.tw/cathaybk/personal/product/credit-card/cards/cube/",storeBlackList:N,paymentBlackList:$,updateAt:"2024-12-01T00:00:00.000Z",airLines:"EVA",plans:V(3.3,300,1e3)}],W=["政府稅款","公共事業代扣繳","交通違規罰鍰","分期付款","全聯福利中心","7-ELEVEN","全家便利商店"],H=[],Ke=[{name:"星宇世界卡",description:"",cardUrl:"https://www.esunbank.com/zh-tw/personal/credit-card/intro/co-branded-card/starlux-card",storeBlackList:W,paymentBlackList:H,airLines:"SJX",plans:[{name:null,rewards:[{reward:{type:"DirectMilesReward",name:"國外消費",spendingPerMile:5},transactionType:"Foreign",condition:"Birthday"},{reward:{type:"DirectMilesReward",name:"國外消費",spendingPerMile:10},transactionType:"Foreign"},{reward:{type:"DirectMilesReward",name:"國內消費",spendingPerMile:20},transactionType:"Domestic"}]}],updateAt:new Date("2024/12/01 00:00:00").toISOString()},{name:"星宇商務鈦金卡",description:"",cardUrl:"https://www.esunbank.com/zh-tw/personal/credit-card/intro/co-branded-card/starlux-card",storeBlackList:W,paymentBlackList:H,airLines:"SJX",plans:[{name:null,rewards:[{reward:{type:"DirectMilesReward",name:"國外消費",spendingPerMile:7.5},transactionType:"Foreign",condition:"Birthday"},{reward:{type:"DirectMilesReward",name:"國外消費",spendingPerMile:15},transactionType:"Foreign"},{reward:{type:"DirectMilesReward",name:"國內消費",spendingPerMile:25},transactionType:"Domestic"}]}],updateAt:new Date("2024/12/01 00:00:00").toISOString()},{name:"星宇鈦金卡",description:"",cardUrl:"https://www.esunbank.com/zh-tw/personal/credit-card/intro/co-branded-card/starlux-card",storeBlackList:W,paymentBlackList:H,airLines:"SJX",plans:[{name:null,rewards:[{reward:{type:"DirectMilesReward",name:"國外消費",spendingPerMile:20},transactionType:"Foreign"},{reward:{type:"DirectMilesReward",name:"國內消費",spendingPerMile:28},transactionType:"Domestic"}]}],updateAt:new Date("2024/12/01 00:00:00").toISOString()}],Z=["台灣中油-直營","台灣大車隊","台鐵","高鐵","UBER","Yoxi","LINEGO","新光三越","遠東百貨","遠東SOGO百貨","誠品生活","漢神百貨","微風廣場","微風信義","微風南京","微風南山","微風台北車站","環球購物中心","台北101","華泰名品城","三井OUTLET","遠東巨城","昇恆昌","夢時代購物中心","京站","美麗華","南紡購物中心","秀泰生活","台茂購物中心","lalaport","統領廣場","采盟","UBEREATS","FOODPANDA","星巴克","EZTABLE","王品瘋美食","摩斯漢堡","FOODOMO","漢來美食","饗Joy","饗食天堂","果然匯","小福利","饗饗","旭集","開飯","饗泰多","真珠","瓦城","非常泰","大心","1010","時時香","BOBO","乾杯集團","路易莎","中華航空","長榮航空","日本航空","台灣虎航","樂桃航空","酷航","立榮航空","華信航空","Agoda","booking.com","Hotels.com","AsiaYo","Expedia","KKday","KLOOK","雄獅旅遊","可樂旅遊","東南旅行社","Apple直營店","小米台灣","全國電子","燦坤","迪卡儂","屈臣氏","康是美","IKEA","特力屋","特力和樂","UNIQLO","NET","大樹藥局","丁丁藥妝","momo購物網","蝦皮購物","淘寶網","Coupang酷澎","東森購物","雅虎奇摩購物中心","博客來","玉山Wallet愛心捐款-單筆捐款","玉山Wallet愛心捐款-定期定額","特斯拉","Gogoro電池資費","YouBike 2.0","日本實體","韓國實體","泰國實體","越南實體","新加坡實體","中國實體","香港實體","澳門實體","美國實體","英國實體","法國實體","德國實體","義大利實體"],Q={reward:{type:"TruncatedPointsReward",name:null,pointBackRates:[{rate:.3},{rate:.7}],pointsPerMile:200,milesPerUnit:300}},Ge=[{name:"UniCard 卡",description:"",cardUrl:"https://www.esunbank.com/zh-tw/personal/credit-card/intro/bank-card/unicard",storeBlackList:W,paymentBlackList:H,airLines:"EVA",plans:[{name:"任意選 (需要切換店家)",rewards:[{reward:{type:"TruncatedPointsReward",name:null,pointBackRates:[{rate:.3},{rate:.7},{rate:2.5,limit:500}],pointsPerMile:200,milesPerUnit:300},stores:Z,payments:["信用卡","Apple Pay","Samsung Pay","Google Pay"]},{reward:{type:"TruncatedPointsReward",name:null,pointBackRates:[{rate:.3},{rate:.7},{rate:2.5,limit:500}],pointsPerMile:200,milesPerUnit:300},payments:["Line Pay","街口支付","悠遊付","橘子支付","icash pay"]},Q]},{name:"簡單選",rewards:[{reward:{type:"TruncatedPointsReward",name:null,pointBackRates:[{rate:.3},{rate:.7},{rate:2,limit:500}],pointsPerMile:200,milesPerUnit:300},stores:Z,payments:["信用卡","Apple Pay","Samsung Pay","Google Pay"]},{reward:{type:"TruncatedPointsReward",name:null,pointBackRates:[{rate:.3},{rate:.7},{rate:2,limit:500}],pointsPerMile:200,milesPerUnit:300},payments:["Line Pay","街口支付","悠遊付","橘子支付","icash pay"]},Q]},{name:"UP選",rewards:[{reward:{type:"TruncatedPointsReward",name:null,pointBackRates:[{rate:.3},{rate:.7},{rate:3.5,limit:2e3}],pointsPerMile:200,milesPerUnit:300},stores:Z,payments:["信用卡","Apple Pay","Samsung Pay","Google Pay"]},{reward:{type:"TruncatedPointsReward",name:null,pointBackRates:[{rate:.3},{rate:.7},{rate:3.5,limit:2e3}],pointsPerMile:200,milesPerUnit:300},payments:["Line Pay","街口支付","悠遊付","橘子支付","icash pay"]},Q]}],updateAt:new Date("2024/12/01 00:00:00").toISOString()}],q=["政府稅款","公共事業代扣繳","交通違規罰鍰","分期付款"],ee=["全盈+PAY","icash pay","OPEN錢包","My FamiPay"],ze=[{name:"旅人無限卡",description:"",cardUrl:"https://www.hsbc.com.tw/credit-cards/products/travel/visa-infinite/",storeBlackList:q,paymentBlackList:ee,airLines:"EVA",plans:[{name:null,rewards:[{reward:{type:"CumulativeMilesReward",name:"國外消費",spendingPerMile:10},transactionType:"Foreign"},{reward:{type:"CumulativeMilesReward",name:"國內消費",spendingPerMile:18},transactionType:"Domestic"}]}],updateAt:new Date("2024/12/01 00:00:00").toISOString()},{name:"旅人御璽卡",description:"",cardUrl:"https://www.hsbc.com.tw/credit-cards/products/travel/visa-signature/",storeBlackList:q,paymentBlackList:ee,airLines:"EVA",plans:[{name:null,rewards:[{reward:{type:"CumulativeMilesReward",name:"國外消費",spendingPerMile:15},transactionType:"Foreign"},{reward:{type:"CumulativeMilesReward",name:"國內消費",spendingPerMile:18},transactionType:"Domestic"}]}],updateAt:new Date("2024/12/01 00:00:00").toISOString()},{name:"旅人輕旅卡",description:"",cardUrl:"https://www.hsbc.com.tw/credit-cards/products/travel/visa-light/",storeBlackList:q,paymentBlackList:ee,airLines:"EVA",plans:[{name:null,rewards:[{reward:{type:"CumulativeMilesReward",name:"國外消費",spendingPerMile:20},transactionType:"Foreign"},{reward:{type:"CumulativeMilesReward",name:"國內消費",spendingPerMile:20},transactionType:"Domestic"}]}],updateAt:new Date("2024/12/01 00:00:00").toISOString()}],Xe=[ze[2],Je[4],Ke[0],Ge[0]].filter(Be),We=l=>l==="AllPlanRewardMiles"||l==="CurrentPlanRewardMiles",O=new Te(localStorage,{showRewardMilesType:We,commonPaymentMethods:(()=>{const l=new Set(["信用卡","Apple Pay","Samsung Pay","Google Pay","Line Pay","Fitbit Pay","Garmin Pay","Hami Pay","街口支付","全盈+PAY","全支付","Pi錢包","橘子支付","歐付寶","icash pay","OPEN錢包","My FamiPay","悠遊付","ezPay","GOMAJI Pay","friday wallet","PayPal","PX Pay","中油Pay","台灣Pay","支付寶"]);return t=>Array.isArray(t)&&t.every(a=>l.has(a)===!0)})(),cardConfigs:(()=>{const l=new Set(["信用卡","Apple Pay","Samsung Pay","Google Pay","Line Pay","Fitbit Pay","Garmin Pay","Hami Pay","街口支付","全盈+PAY","全支付","Pi錢包","橘子支付","歐付寶","icash pay","OPEN錢包","My FamiPay","悠遊付","ezPay","GOMAJI Pay","friday wallet","PayPal","PX Pay","中油Pay","台灣Pay","支付寶"]),t=new Set(["信用卡","Apple Pay","Samsung Pay","Google Pay","Line Pay","Fitbit Pay","Garmin Pay","Hami Pay","街口支付","全盈+PAY","全支付","Pi錢包","橘子支付","歐付寶","icash pay","OPEN錢包","My FamiPay","悠遊付","ezPay","GOMAJI Pay","friday wallet","PayPal","PX Pay","中油Pay","台灣Pay","支付寶"]),a=new Set(["信用卡","Apple Pay","Samsung Pay","Google Pay","Line Pay","Fitbit Pay","Garmin Pay","Hami Pay","街口支付","全盈+PAY","全支付","Pi錢包","橘子支付","歐付寶","icash pay","OPEN錢包","My FamiPay","悠遊付","ezPay","GOMAJI Pay","friday wallet","PayPal","PX Pay","中油Pay","台灣Pay","支付寶"]),s=e=>typeof e.name=="string"&&typeof e.description=="string"&&(e.cardUrl===null||typeof e.cardUrl=="string")&&(e.storeBlackList===void 0||Array.isArray(e.storeBlackList)&&e.storeBlackList.every(i=>typeof i=="string"))&&(e.paymentBlackList===void 0||Array.isArray(e.paymentBlackList)&&e.paymentBlackList.every(i=>l.has(i)===!0))&&Array.isArray(e.plans)&&e.plans.every(i=>typeof i=="object"&&i!==null&&r(i))&&(e.airLines==="SJX"||e.airLines==="EVA"||e.airLines==="ANA"||e.airLines==="JAL"||e.airLines==="CPA"||e.airLines==="CAL")&&typeof e.updateAt=="string"&&RegExp(/^[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2d[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2d[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?T[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?:[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?:[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?Z$/).test(e.updateAt),r=e=>(e.name===null||typeof e.name=="string")&&Array.isArray(e.rewards)&&e.rewards.every(i=>typeof i=="object"&&i!==null&&o(i))&&(e.condition===null||e.condition===void 0||e.condition==="Birthday"),o=e=>typeof e.reward=="object"&&e.reward!==null&&A(e.reward)&&(e.transactionType===null||e.transactionType===void 0||e.transactionType==="Domestic"||e.transactionType==="Foreign")&&(e.stores===void 0||Array.isArray(e.stores)&&e.stores.every(i=>typeof i=="string"))&&(e.storeBlackList===void 0||Array.isArray(e.storeBlackList)&&e.storeBlackList.every(i=>typeof i=="string"))&&(e.payments===void 0||Array.isArray(e.payments)&&e.payments.every(i=>t.has(i)===!0))&&(e.paymentBlackList===void 0||Array.isArray(e.paymentBlackList)&&e.paymentBlackList.every(i=>a.has(i)===!0))&&(e.condition===null||e.condition===void 0||e.condition==="Birthday"),n=e=>Array.isArray(e.pointBackRates)&&e.pointBackRates.every(i=>typeof i=="object"&&i!==null&&c(i))&&e.type==="RoundedPointsReward"&&(e.name===null||typeof e.name=="string")&&typeof e.pointsPerMile=="number"&&typeof e.milesPerUnit=="number",c=e=>typeof e.rate=="number"&&(e.limit===void 0||typeof e.limit=="number"),p=e=>Array.isArray(e.pointBackRates)&&e.pointBackRates.every(i=>typeof i=="object"&&i!==null&&c(i))&&e.type==="TruncatedPointsReward"&&(e.name===null||typeof e.name=="string")&&typeof e.pointsPerMile=="number"&&typeof e.milesPerUnit=="number",m=e=>typeof e.spendingPerPoint=="number"&&e.type==="PointsRewardPerThreshold"&&(e.name===null||typeof e.name=="string")&&typeof e.pointsPerMile=="number"&&typeof e.milesPerUnit=="number",M=e=>typeof e.spendingPerMile=="number"&&e.type==="CumulativeMilesReward"&&(e.name===null||typeof e.name=="string"),b=e=>typeof e.spendingPerMile=="number"&&e.type==="DirectMilesReward"&&(e.name===null||typeof e.name=="string"),A=e=>e.type==="TruncatedPointsReward"?p(e):e.type==="RoundedPointsReward"?n(e):e.type==="PointsRewardPerThreshold"?m(e):e.type==="DirectMilesReward"?b(e):e.type==="CumulativeMilesReward"?M(e):!1;return e=>Array.isArray(e)&&e.every(i=>typeof i=="object"&&i!==null&&s(i))})(),conditionTypes:l=>Array.isArray(l)&&l.every(t=>t==="Birthday")},"bestMileageCards"),ye=Re("BestMileageCards",()=>{ve(()=>{const m=O.get("cardConfigs")??[];r.value=new Map(m.map(M=>[ue(),M]))});const l=U(O.get("showRewardMilesType")??"AllPlanRewardMiles");function t(m){O.set("showRewardMilesType",m),l.value=m}const a=U(O.get("commonPaymentMethods")??["信用卡","Apple Pay","Line Pay","街口支付"]);function s([...m]){m=[...new Set(m)],O.set("commonPaymentMethods",m),a.value=m}const r=U(new Map),o=te(()=>(r.value.size===0?Xe:[...r.value.values()]).map(M=>Fe(M)));function n(m,M){r.value.set(m,M),O.set("cardConfigs",[...r.value.values()])}const c=U(O.get("conditionTypes")??[]);function p([...m]){c.value=m,O.set("conditionTypes",m)}return{showRewardMilesType:Y(l),updateShowRewardMilesType:t,commonPaymentMethods:Y(a),updateCommonPaymentMethods:s,cards:o,updateCardConfig:n,conditionTypes:Y(c),updateConditionTypes:p}}),He={class:"flex-col gap-24px my-16px"},Ye={class:"flex-center gap-8px"},je={class:"flex mx-16px"},Ze=se({__name:"CommonSettings",setup(l){const t=ye(),{showRewardMilesType:a,commonPaymentMethods:s,conditionTypes:r}=ce(t);return(o,n)=>{const c=g("v-label"),p=g("v-radio"),m=g("v-radio-group"),M=g("v-select"),b=g("v-switch");return L(),B("div",He,[P("div",Ye,[w(c,{text:"回饋顯示"}),w(m,{"model-value":S(a),"hide-details":"",inline:"","onUpdate:modelValue":n[0]||(n[0]=A=>A!==null&&S(t).updateShowRewardMilesType(A))},{default:k(()=>[w(p,{density:"compact",label:"全部方案",value:"AllPlanRewardMiles"}),w(p,{density:"compact",label:"當前方案",value:"CurrentPlanRewardMiles"})]),_:1},8,["model-value"])]),P("div",null,[w(M,{"model-value":S(s),items:S(pe)(S(Ve),"asc"),label:"使用中的付款方式",multiple:"","hide-details":"","onUpdate:modelValue":n[1]||(n[1]=A=>A!==null&&S(t).updateCommonPaymentMethods(A))},null,8,["model-value","items"])]),P("div",null,[w(c,{text:"其他設定"}),P("div",je,[w(b,{"model-value":S(r),label:"生日中",value:"Birthday","hide-details":"",color:"blue","onUpdate:modelValue":n[2]||(n[2]=A=>A!==null&&S(t).updateConditionTypes(A))},null,8,["model-value"])])])])}}}),Qe={};function qe(l,t){return"管理信用卡的設定"}const et=ie(Qe,[["render",qe]]),tt={"7-ELEVEN":["7-11","Seven Eleven","統一超商","小7"],ANA全日空:["ANA","全日空","All Nippon Airways","NH"],"ATT 4 FUN":["ATT4FUN","ATT信義"],"App Store":["蘋果應用商店"],"Apple Arcade":["蘋果遊戲訂閱服務"],"Apple Music":["蘋果音樂","Apple音樂"],"Apple One":["蘋果One訂閱"],"Apple TV+":["Apple TV Plus"],"Apple Wallet ICOCA":["ICOCA電子票","Apple錢包ICOCA"],"Apple Wallet PASMO":["PASMO電子票","Apple錢包PASMO"],"Apple Wallet SUICA":["SUICA電子票","Apple錢包SUICA"],CITYLINK:["City Link"],"Disney+":["Disney Plus","迪士尼+"],"Google Play":["Google應用商店"],Grab:["Grab Taxi","Grab叫車"],"MITSUI OUTLET PARK 台中港":["三井台中港","三井OUTLET台中"],"MITSUI OUTLET PARK 台南":["三井台南","三井OUTLET台南"],"MITSUI OUTLET PARK 林口":["三井林口","三井OUTLET林口"],"Mitsui Shopping Park LaLaport 台中":["LaLaport台中","三井LaLaport台中"],Netflix:["網飛"],Nintendo:["任天堂","Switch","老任"],"PChome 24h購物(不含儲值及電子票券)":["PChome","PChome購物"],"Tiger City":["老虎城","Tiger City購物中心"],"Trip.com":["攜程"],"Uber Eats (不含 Uber One)":["優步外送"],foodpanda:["熊貓外送","Food Panda"],iCloud:["蘋果雲端","iCloud雲端"],iRent:["i Rent"],iTunes:["蘋果iTunes"],中友百貨:["中友"],中華航空:["China Airlines","CAL","CI","華航"],亞洲航空:["AirAsia","亞航","AXM","AK"],京站:["Q Square","京站商場"],全家便利商店:["FamilyMart","全家"],全球迪士尼飯店:["Disney Hotels"],全聯福利中心:["PX Mart"],南紡購物中心:["Tainan Spinnery Mall","南紡"],博客來:["Books.com.tw"],卡達航空:["Qatar Airways","卡航","QTR","QR"],可樂旅遊:["Cola Travel","可樂旅行社"],台北101:["Taipei 101","101大樓"],"台灣中油-直營":["中油直營","直營中油"],台灣大車隊:["Taiwan Taxi","大車隊"],台灣虎航:["Tigerair Taiwan","台虎","TWA","IT"],台灣高鐵:["Taiwan High Speed Rail"],台茂購物中心:["TaiMall"],吉卜力公園:["Ghibli Park"],國泰航空:["Cathay Pacific","國泰","CPA","CX","Cathay Pacific Airways"],土耳其航空:["Turkish Airlines","土航","THY","TK"],夢時代:["Dream Mall"],"大阪環球影城(USJ)":["Universal Studios Japan"],大韓航空:["Korean Air","韓航","KAL","KE"],大魯閣新時代:["Taroko Mall","大魯閣"],太平洋百貨:["Pacific Department Store","太平洋"],好樂迪KTV:["Holiday"],家樂福:["Carrefour"],屈臣氏:["Watsons"],康是美:["Cosmed"],捷星航空:["JST","JQ","Jetstar Airways"],新加坡航空:["SIA","SQ","Singapore Airlines"],日本航空:["JAL","JL","Japan Airlines"],星宇航空:["starlux","SJX","JX","STARLUX Airlines"],樂桃航空:["APJ","MM","Peach Aviation"],法國航空:["AFR","AF","Air France"],聯合航空:["UAL","UA","United Airlines"],蝦皮購物:["shopee"],越捷航空:["VJC","VJ","VietJet Air"],達美航空:["DAL","DL","Delta Air Lines"],遠東百貨:["遠百"],酷航:["SCO","TR","Scoot"],長榮航空:["EVA","BR","EVA Airlines","EVA Air"],阿聯酋航空:["UAE","EK","Emirates"],麥當勞:["McDonald's"]},at={class:"flex-col gap-8px h-full"},st={class:"flex items-center flex-wrap gap-x-8px"},nt={class:"flex-center gap-8px"},it={ref:"rewardCardList",class:"gap-4px flex-col flex-grow-1 overflow-y-auto"},rt={class:"flex items-center justify-between"},lt={class:"flex items-end gap-4px"},ot={class:"text-12px opacity-50 p-4px"},dt={key:0,class:"fa-solid fa-circle-check"},ct={class:"flex-col gap-8px"},pt={class:"text-0.75rem"},ut={class:"text-wrap"},mt={class:"flex-col"},yt={class:"flex justify-between"},Pt=["href"],ht={key:0},_t="其他店家",wt=se({__name:"SearchReward",setup(l){const{showRewardMilesType:t,commonPaymentMethods:a,cards:s,conditionTypes:r}=ce(ye()),o=U(0),n=U(""),c=U("Domestic"),p=U([]),m=oe("rewardCardList"),M=oe("storeAutoComplete"),b=te(()=>{const d=pe(ne(s.value.flatMap(v=>v.storeList)),"asc").map(v=>({store:v,aliases:tt[v]??[]}));return[{store:_t},...d]});function A(u,d,v){return d=d.toLowerCase(),[u,...(v==null?void 0:v.raw.aliases)??[]].map(f=>f.toLowerCase()).some(f=>f.includes(d))}function e(u,d){return t.value==="CurrentPlanRewardMiles"?[u.currentPlanRewardMiles(d)]:u.getAllPlanRewardMiles(d)}const i=te(()=>{var v,x;const u={amount:o.value,acceptedPayments:p.value,transactionAttributesType:c.value,currentConditions:[...r.value]};n.value!==""&&(u.transactionStore=n.value);const d=[];for(const f of s.value){if(!(f instanceof me))continue;const I=e(f,u);for(const R of I){const K={cardName:f.name,planName:R.planName,rewardName:R.name,miles:R.miles,payments:R.payments,airLinesCode:f.airLinesCode,isSelectedPlan:t.value==="AllPlanRewardMiles"&&R.planId===f.selectedPlanId,calculateDetail:J(R.reward),rewardDescription:((v=R.reward)==null?void 0:v.description)??null,cardUrl:f.cardUrl,description:f.description};d.push(K)}}return(x=m.value)==null||x.scrollTo({top:0,behavior:"smooth"}),de(de(d,"isSelectedPlan","desc"),"miles","desc")}),h=U(null);function J(u){const d="回饋計算:";switch(u==null?void 0:u.type){case"RoundedPointsReward":case"TruncatedPointsReward":{const v=u.type==="RoundedPointsReward"?Math.round:Math.floor;let x=0;return[d,...u.pointBackRates.map(({rate:f,limit:I})=>{const R=Math.min(v(o.value*f/100),I??1/0);x+=R;const K=I!==void 0?` (limit ${I})`:"";return`${o.value} * ${f}% = ${R}${K}`}),`總計 ${x} points`,`${x} / ${u.pointsPerMile} * ${u.milesPerUnit} = ${Math.round(x/u.pointsPerMile*u.milesPerUnit*100)/100} miles`]}case"PointsRewardPerThreshold":{const v=Math.floor(o.value/u.spendingPerPoint);return[d,`${o.value} / ${u.spendingPerPoint} = ${v} points`,`${v} / ${u.pointsPerMile} * ${u.milesPerUnit} = ${Math.round(v/u.pointsPerMile*u.milesPerUnit*100)/100} miles`]}case"CumulativeMilesReward":return[d,`${o.value} / ${u.spendingPerMile} = ${Math.round(o.value/u.spendingPerMile*100)/100}`];case"DirectMilesReward":return[d,`${o.value} / ${u.spendingPerMile} = ${Math.floor(o.value/u.spendingPerMile)} (小數省略)`];default:return[]}}return(u,d)=>{const v=g("v-text-field"),x=g("v-autocomplete"),f=g("v-label"),I=g("v-checkbox"),R=g("v-radio"),K=g("v-radio-group"),le=g("v-card"),Pe=g("v-btn"),he=g("v-dialog");return L(),B(D,null,[P("div",at,[w(v,{"model-value":o.value,class:"flex-grow-0",density:"comfortable","hide-details":"",label:"交易金額",inputmode:"decimal",clearable:o.value!==0,"onUpdate:modelValue":d[0]||(d[0]=y=>o.value=isNaN(parseFloat(y))?0:parseFloat(y))},null,8,["model-value","clearable"]),w(x,{ref:"storeAutoComplete",modelValue:n.value,"onUpdate:modelValue":d[1]||(d[1]=y=>n.value=y),"custom-filter":A,class:"flex-grow-0",density:"comfortable","hide-details":"","item-value":"store","item-title":"store",label:"消費店家",items:b.value,clearable:n.value!=="",placeholder:"全部店家","onUpdate:menu":d[2]||(d[2]=y=>{var E;return!y&&((E=S(M))==null?void 0:E.blur())})},null,8,["modelValue","items","clearable"]),P("div",null,[w(f,{text:"支援的付款方式"}),P("div",st,[(L(!0),B(D,null,X(S(a),(y,E)=>(L(),F(I,{key:E,modelValue:p.value,"onUpdate:modelValue":d[3]||(d[3]=_e=>p.value=_e),density:"compact",value:y,"hide-details":"",label:y},null,8,["modelValue","value","label"]))),128))])]),P("div",nt,[w(f,{text:"交易類型"}),w(K,{modelValue:c.value,"onUpdate:modelValue":d[4]||(d[4]=y=>c.value=y),"hide-details":"",inline:""},{default:k(()=>[w(R,{density:"compact",label:"國內交易",value:"Domestic"}),w(R,{density:"compact",label:"國外交易",value:"Foreign"})]),_:1},8,["modelValue"])]),P("div",it,[(L(!0),B(D,null,X(i.value,(y,E)=>(L(),F(le,{key:E,density:"compact",class:"mx-auto w-full flex-shrink-0",variant:"outlined",onClick:()=>h.value=y},{title:k(()=>[P("div",rt,[P("div",lt,[ae(C(y.miles)+" ",1),P("p",ot,C(y.airLinesCode),1)]),y.isSelectedPlan?(L(),B("i",dt)):z("",!0)])]),text:k(()=>[P("div",ct,[P("p",pt,C(`${y.cardName} ${y.planName??""} ${y.rewardName??""}`)+" "+C(y.payments.length===0?"":` (支付方式: ${y.payments.join(", ")})`),1)])]),_:2},1032,["onClick"]))),128))],512)]),w(he,{"model-value":!!h.value,"onUpdate:modelValue":d[6]||(d[6]=y=>h.value=null)},{default:k(()=>[h.value?(L(),F(le,{key:0,class:"mx-auto reward-detail-dialog","min-width":"100%",title:`${h.value.cardName} ${h.value.planName??""} ${h.value.rewardName??""}`},{subtitle:k(()=>[P("p",ut,C(h.value.rewardDescription??""),1)]),text:k(()=>[P("div",mt,[P("p",yt,[d[7]||(d[7]=ae(" 卡片說明： ")),h.value.cardUrl!==null?(L(),B("a",{key:0,target:"_blank",class:"underline",href:h.value.cardUrl}," 網站 ",8,Pt)):z("",!0)]),h.value.description!==""?(L(),B("p",ht,C(h.value.description),1)):z("",!0),d[8]||(d[8]=P("br",null,null,-1)),P("p",null,"消費金額: "+C(o.value),1),P("p",null,"哩程預估: "+C(h.value.miles)+" "+C(h.value.airLinesCode),1),d[9]||(d[9]=P("br",null,null,-1)),(L(!0),B(D,null,X(h.value.calculateDetail,(y,E)=>(L(),B("p",{key:E},C(y),1))),128))])]),actions:k(()=>[w(Pe,{class:"ms-auto",text:"Close",onClick:d[5]||(d[5]=y=>h.value=null)})]),_:1},8,["title"])):z("",!0)]),_:1},8,["model-value"])],64)}}}),gt=ie(wt,[["__scopeId","data-v-6a5800df"]]),vt={};function Mt(l,t){return" 實作商店別名，方便查詢（目標上面做個開關，可以切換自動用專案的名詞，或是自己設定別名） "}const At=ie(vt,[["render",Mt]]),ft={style:{height:"calc(100dvh - 56px)"},class:"overflow-hidden mt-56px p-8px"},Lt=se({__name:"App",setup(l){const t={查詢回饋:gt,信用卡管理:et,商家管理:At,喜好設定:Ze},a=Object.keys(t),s=U(!1),r=U(a[0]);return(o,n)=>{const c=g("v-app-bar-nav-icon"),p=g("v-app-bar-title"),m=g("v-app-bar"),M=g("v-list-item"),b=g("v-divider"),A=g("v-navigation-drawer"),e=g("v-app");return L(),F(e,null,{default:k(()=>[w(m,{density:"comfortable",elevation:2},{prepend:k(()=>[w(c,{onClick:n[0]||(n[0]=i=>s.value=!s.value)},{default:k(()=>n[2]||(n[2]=[P("i",{class:"fa-solid fa-bars"},null,-1)])),_:1}),w(p,null,{default:k(()=>[ae(C(r.value),1)]),_:1})]),_:1}),w(A,{modelValue:s.value,"onUpdate:modelValue":n[1]||(n[1]=i=>s.value=i)},{default:k(()=>[(L(!0),B(D,null,X(S(a),(i,h)=>(L(),B(D,{key:h},[w(M,{title:i,class:Me(["h-48px",{"text-emphasis":r.value===i}]),onClick:()=>{r.value=i,s.value=!1}},null,8,["title","class","onClick"]),w(b)],64))),128))]),_:1},8,["modelValue"]),P("main",ft,[(L(),F(Ae,null,[(L(),F(fe(t[r.value])))],1024))])]),_:1})}}}),re=Le(Lt);re.use(be);re.use(ke());re.mount("#app");
//# sourceMappingURL=bestMileageCards-D8SiyPE5.js.map
